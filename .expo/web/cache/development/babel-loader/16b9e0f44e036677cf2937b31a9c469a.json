{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport styles from \"./style\";\nexport default function ResultIMC(props) {\n  var OnShare = function OnShare() {\n    var result;\n    return _regeneratorRuntime.async(function OnShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: \"Meu IMC hoje é:\" + props.ResultIMC\n            }));\n\n          case 2:\n            result = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.ResultIMC\n  }, React.createElement(View, {\n    style: styles.boxShareButton\n  }, React.createElement(Text, {\n    style: styles.information\n  }, props.messageResultIMC), React.createElement(Text, {\n    style: styles.number\n  }, props.ResultIMC), React.createElement(TouchableOpacity, {\n    style: styles.shared,\n    onPress: OnShare\n  }, React.createElement(Text, {\n    style: styles.sharedText\n  }, \"Share\"))));\n}","map":{"version":3,"names":["React","styles","ResultIMC","props","OnShare","Share","share","message","result","boxShareButton","information","messageResultIMC","number","shared","sharedText"],"sources":["/home/Amospk2/Área de trabalho/ReactNative/myapp/src/components/Form/ResultIMC/index.js"],"sourcesContent":["import React from 'react';\nimport {Text, View, TouchableOpacity, Share} from 'react-native';\nimport styles from './style';\n\nexport default function ResultIMC(props){\n\n    const OnShare = async () => {\n        const result = await Share.share({\n            message:\"Meu IMC hoje é:\"+props.ResultIMC,\n        })\n    }\n\n    return (\n        <View style={styles.ResultIMC}>\n            <View style={styles.boxShareButton}>\n            <Text style={styles.information}>{props.messageResultIMC}</Text>\n            <Text style={styles.number}>{props.ResultIMC}</Text> \n                <TouchableOpacity style={styles.shared} onPress={OnShare}>\n                    <Text style={styles.sharedText}>Share</Text>\n                </TouchableOpacity>\n            </View>\n            \n        </View>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;EAEpC,IAAMC,OAAO,GAAG,SAAVA,OAAU;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACSC,KAAK,CAACC,KAAN,CAAY;cAC7BC,OAAO,EAAC,oBAAkBJ,KAAK,CAACD;YADH,CAAZ,CADT;;UAAA;YACNM,MADM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAMA,OACI,oBAAC,IAAD;IAAM,KAAK,EAAEP,MAAM,CAACC;EAApB,GACI,oBAAC,IAAD;IAAM,KAAK,EAAED,MAAM,CAACQ;EAApB,GACA,oBAAC,IAAD;IAAM,KAAK,EAAER,MAAM,CAACS;EAApB,GAAkCP,KAAK,CAACQ,gBAAxC,CADA,EAEA,oBAAC,IAAD;IAAM,KAAK,EAAEV,MAAM,CAACW;EAApB,GAA6BT,KAAK,CAACD,SAAnC,CAFA,EAGI,oBAAC,gBAAD;IAAkB,KAAK,EAAED,MAAM,CAACY,MAAhC;IAAwC,OAAO,EAAET;EAAjD,GACI,oBAAC,IAAD;IAAM,KAAK,EAAEH,MAAM,CAACa;EAApB,WADJ,CAHJ,CADJ,CADJ;AAYH"},"metadata":{},"sourceType":"module"}