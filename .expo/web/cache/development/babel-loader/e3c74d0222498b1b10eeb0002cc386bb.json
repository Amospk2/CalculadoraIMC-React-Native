{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ResultIMC from \"./ResultIMC\";\nimport styles from \"./style\";\nexport default function Form() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      altura = _useState2[0],\n      setAltura = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      peso = _useState4[0],\n      setPeso = _useState4[1];\n\n  var _useState5 = useState(\"Preencha o peso e altura\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageIMC = _useState6[0],\n      setmessageIMC = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imc = _useState8[0],\n      setImc = _useState8[1];\n\n  var _useState9 = useState(\"Calcular\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textbutton = _useState10[0],\n      setTextButton = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      erroMessage = _useState12[0],\n      setErroMessage = _useState12[1];\n\n  function IMCCalculer() {\n    return setImc((peso / (altura * altura)).toFixed(2));\n  }\n\n  function verificationIMC() {\n    setErroMessage(\"Campo obrigatorio1\");\n  }\n\n  function validationIMC() {\n    if (peso != '' && altura != '') {\n      IMCCalculer();\n      setPeso('');\n      setAltura('');\n      setmessageIMC(\"seu imc é igual:\");\n      setTextButton(\"Calcular novamente\");\n      setErroMessage(null);\n      return;\n    }\n\n    verificationIMC();\n    setImc(null);\n    setTextButton(\"Calcular\");\n    setmessageIMC(\"Preencha o peso e altura\");\n  }\n\n  return React.createElement(View, {\n    style: styles.formContext\n  }, React.createElement(View, {\n    style: styles.form\n  }, React.createElement(Text, {\n    style: styles.formLabel\n  }, \"Altura\"), React.createElement(Text, {\n    style: styles.errorMessage\n  }, erroMessage), React.createElement(TextInput, {\n    onChangeText: setAltura,\n    value: altura,\n    placeholder: \"Ex: 1.77\",\n    keyboardType: \"numeric\",\n    style: styles.input\n  }), React.createElement(Text, {\n    style: styles.formLabel\n  }, \"Peso\"), React.createElement(Text, {\n    style: styles.errorMessage\n  }, erroMessage), React.createElement(TextInput, {\n    onChangeText: setPeso,\n    value: peso,\n    placeholder: \"Ex: 64.5\",\n    keyboardType: \"numeric\",\n    style: styles.input\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonCalculator,\n    onPress: function onPress() {\n      validationIMC();\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonCalculator\n  }, textbutton))), React.createElement(ResultIMC, {\n    messageResultIMC: messageIMC,\n    ResultIMC: imc\n  }));\n}","map":{"version":3,"sources":["/home/amospk2/Desktop/ReactNative/myapp/src/components/Form/index.js"],"names":["React","useState","ResultIMC","styles","Form","altura","setAltura","peso","setPeso","messageIMC","setmessageIMC","imc","setImc","textbutton","setTextButton","erroMessage","setErroMessage","IMCCalculer","toFixed","verificationIMC","validationIMC","formContext","form","formLabel","errorMessage","input","buttonCalculator","textbuttonCalculator"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {View, Text, TextInput, Button, TouchableOpacity} from 'react-native';\nimport ResultIMC from './ResultIMC';\nimport styles from './style';\n\nexport default function Form(){\n\n    const [altura, setAltura] = useState('');\n    const [peso, setPeso] = useState('');\n    const [messageIMC, setmessageIMC] = useState(\"Preencha o peso e altura\");\n    const [imc, setImc] = useState(null);\n    const [textbutton, setTextButton] = useState(\"Calcular\");\n    const [erroMessage, setErroMessage] = useState(null);   \n\n\n    function IMCCalculer()\n    {\n        return setImc((peso/(altura*altura)).toFixed(2))\n    }\n\n    function verificationIMC()\n    {\n        setErroMessage(\"Campo obrigatorio1\")\n    }\n\n\n    function validationIMC()\n    {\n        if(peso != '' && altura != '')\n        {\n            IMCCalculer()\n            setPeso('')\n            setAltura('')\n            setmessageIMC(\"seu imc é igual:\")\n            setTextButton(\"Calcular novamente\")\n            setErroMessage(null)\n            return\n        }\n        verificationIMC()\n        setImc(null)\n        setTextButton(\"Calcular\")\n        setmessageIMC(\"Preencha o peso e altura\")\n        \n    }\n\n    return (\n        <View style={styles.formContext}>\n            <View style={styles.form}> \n                <Text style={styles.formLabel}>Altura</Text>\n                <Text style={styles.errorMessage}>{erroMessage}</Text>\n                <TextInput \n                onChangeText={setAltura}\n                value={altura}\n                placeholder=\"Ex: 1.77\"\n                keyboardType=\"numeric\"\n                style = {styles.input}\n                />\n\n                <Text style={styles.formLabel}>Peso</Text>\n                <Text style={styles.errorMessage}>{erroMessage}</Text>\n                <TextInput\n                onChangeText={setPeso}\n                value = {peso}\n                placeholder=\"Ex: 64.5\"\n                keyboardType=\"numeric\"\n                style = {styles.input}\n                />\n\n                <TouchableOpacity\n                style={styles.buttonCalculator}\n                onPress={()=>{validationIMC()}}\n                ><Text style={styles.textbuttonCalculator}>{textbutton}</Text></TouchableOpacity>\n            </View>\n\n            <ResultIMC messageResultIMC={messageIMC} ResultIMC={imc} />\n\n            \n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}