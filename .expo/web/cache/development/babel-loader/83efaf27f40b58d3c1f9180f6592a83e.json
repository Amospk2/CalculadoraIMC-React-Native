{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ResultIMC from \"./ResultIMC\";\nimport styles from \"./style\";\nexport default function Form() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      altura = _useState2[0],\n      setAltura = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      peso = _useState4[0],\n      setPeso = _useState4[1];\n\n  var _useState5 = useState(\"Preencha o peso e altura\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageIMC = _useState6[0],\n      setmessageIMC = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imc = _useState8[0],\n      setImc = _useState8[1];\n\n  var _useState9 = useState(\"Calcular\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textbutton = _useState10[0],\n      setTextButton = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      erroMessage = _useState12[0],\n      setErroMessage = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      imcList = _useState14[0],\n      setimcList = _useState14[1];\n\n  function IMCCalculer() {\n    var alturaFormat = altura.replace(\",\", \".\");\n    var totalIMC = (peso / (alturaFormat * alturaFormat)).toFixed(2);\n    setimcList(function (arr) {\n      return [].concat(_toConsumableArray(arr), [{\n        id: new Date().getTime(),\n        imc: totalIMC\n      }]);\n    });\n    setImc(totalIMC);\n  }\n\n  function verificationIMC() {\n    if (imc == null) {\n      setErroMessage(\"Campo obrigatorio*\");\n      Vibration.vibrate();\n    }\n  }\n\n  function validationIMC() {\n    if (peso != '' && altura != '') {\n      IMCCalculer();\n      setPeso('');\n      setAltura('');\n      setmessageIMC(\"seu imc é igual:\");\n      setTextButton(\"Calcular novamente\");\n      setErroMessage(null);\n    } else {\n      verificationIMC();\n      setImc(null);\n      setTextButton(\"Calcular\");\n      setmessageIMC(\"Preencha o peso e altura\");\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.formContext\n  }, imc == null ? React.createElement(Pressable, {\n    onPress: Keyboard.dismiss,\n    style: styles.form\n  }, React.createElement(Text, {\n    style: styles.formLabel\n  }, \"Altura\"), React.createElement(Text, {\n    style: styles.errorMessage\n  }, erroMessage), React.createElement(TextInput, {\n    onChangeText: setAltura,\n    value: altura,\n    placeholder: \"Ex: 1.77\",\n    keyboardType: \"numeric\",\n    style: styles.input\n  }), React.createElement(Text, {\n    style: styles.formLabel\n  }, \"Peso\"), React.createElement(Text, {\n    style: styles.errorMessage\n  }, erroMessage), React.createElement(TextInput, {\n    onChangeText: setPeso,\n    value: peso,\n    placeholder: \"Ex: 64.5\",\n    keyboardType: \"numeric\",\n    style: styles.input\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonCalculator,\n    onPress: function onPress() {\n      validationIMC();\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonCalculator\n  }, textbutton))) : React.createElement(View, {\n    style: styles.exibirResult\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonCalculator,\n    onPress: function onPress() {\n      validationIMC();\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonCalculator\n  }, textbutton)), React.createElement(ResultIMC, {\n    messageResultIMC: messageIMC,\n    ResultIMC: imc\n  })), React.createElement(FlatList, {\n    style: styles.listImcs,\n    data: imcList.reverse(),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, null, item.imc);\n    }\n  }));\n}","map":{"version":3,"sources":["/home/amospk2/Desktop/ReactNative/myapp/src/components/Form/index.js"],"names":["React","useState","ResultIMC","styles","Form","altura","setAltura","peso","setPeso","messageIMC","setmessageIMC","imc","setImc","textbutton","setTextButton","erroMessage","setErroMessage","imcList","setimcList","IMCCalculer","alturaFormat","replace","totalIMC","toFixed","arr","id","Date","getTime","verificationIMC","Vibration","vibrate","validationIMC","formContext","Keyboard","dismiss","form","formLabel","errorMessage","input","buttonCalculator","textbuttonCalculator","exibirResult","listImcs","reverse","item"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {View, \n        Text, \n        TextInput, \n        TouchableOpacity,\n        Vibration,\n        Pressable,\n        Keyboard,\n        FlatList,\n} from 'react-native';\nimport ResultIMC from './ResultIMC';\nimport styles from './style';\n\nexport default function Form(){\n\n    const [altura, setAltura] = useState('');\n    const [peso, setPeso] = useState('');\n    const [messageIMC, setmessageIMC] = useState(\"Preencha o peso e altura\");\n    const [imc, setImc] = useState(null);\n    const [textbutton, setTextButton] = useState(\"Calcular\");\n    const [erroMessage, setErroMessage] = useState(null);   \n    const [imcList, setimcList] = useState([])\n\n\n    function IMCCalculer()\n    {\n        let alturaFormat = altura.replace(\",\", \".\")\n        let totalIMC = ((peso/(alturaFormat*alturaFormat)).toFixed(2));\n        setimcList ((arr)=>[...arr,{id:new Date().getTime(), imc:totalIMC}]);\n        setImc(totalIMC);\n    }\n\n    function verificationIMC()\n    {\n        if(imc == null)\n        {\n            setErroMessage(\"Campo obrigatorio*\")\n            Vibration.vibrate();\n        }\n    }\n\n\n    function validationIMC()\n    {\n        if(peso != '' && altura != '')\n        {\n            IMCCalculer()\n            setPeso('')\n            setAltura('')\n            setmessageIMC(\"seu imc é igual:\")\n            setTextButton(\"Calcular novamente\")\n            setErroMessage(null)\n        }\n        else\n        {\n            verificationIMC()\n            setImc(null)\n            setTextButton(\"Calcular\")\n            setmessageIMC(\"Preencha o peso e altura\")\n        }\n        \n        \n    }\n\n    return (\n        <View style={styles.formContext}> \n        {imc == null ?\n        <Pressable onPress={Keyboard.dismiss} style={styles.form}>\n                <Text style={styles.formLabel}>Altura</Text>\n                <Text style={styles.errorMessage}>{erroMessage}</Text>\n                <TextInput \n                onChangeText={setAltura}\n                value={altura}\n                placeholder=\"Ex: 1.77\"\n                keyboardType=\"numeric\"\n                style = {styles.input}\n                />\n\n                <Text style={styles.formLabel}>Peso</Text>\n                <Text style={styles.errorMessage}>{erroMessage}</Text>\n                <TextInput\n                onChangeText={setPeso}\n                value = {peso}\n                placeholder=\"Ex: 64.5\"\n                keyboardType=\"numeric\"\n                style = {styles.input}\n                />\n\n                <TouchableOpacity\n                style={styles.buttonCalculator}\n                onPress={()=>{validationIMC()}}\n                ><Text style={styles.textbuttonCalculator}>{textbutton}</Text></TouchableOpacity>\n            \n            </Pressable>\n            :\n            <View style={styles.exibirResult}>\n                <TouchableOpacity\n                style={styles.buttonCalculator}\n                onPress={()=>{validationIMC()}}\n                ><Text style={styles.textbuttonCalculator}>{textbutton}</Text></TouchableOpacity>\n                <ResultIMC messageResultIMC={messageIMC} ResultIMC={imc} />\n            \n            </View>\n            }\n            <FlatList\n            style={styles.listImcs}\n            data={imcList.reverse()}\n            renderItem={({item}) =>{\n                return(\n                    <Text>\n                        {item.imc}</Text>\n                    \n                )\n            }}\n            >\n\n            </FlatList>\n            \n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}